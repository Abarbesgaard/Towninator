
using TowninatorCLI.Model;

namespace TowninatorCLI.Utilities.Lists.Buildings
{
    public static class Buildings
    {
        public static List<Building> CultureBuildings()
        {
            return[
            new Building(1, null, null, BuildingType.Culture, SpecificBuilding.GreatHall, 3, 
            null, 1.0f, 1.2f, 1.0f, 1.0f, 
            0.8f, 0.5f, 2.0f, 0.7f, 1.7f, 
            0.5f, 0.4f, 0.1f, 1.4f, 
            0.7f),
            new Building(1, null, null, BuildingType.Culture, SpecificBuilding.MeadHall, 3, 
            null, 1.0f, 1.2f, 1.0f, 1.0f, 
            0.8f, 0.5f, 2.0f, 0.7f, 1.7f, 
            0.5f, 0.4f, 0.1f, 1.4f, 
            0.7f),
             new Building(1, null, null, BuildingType.Culture, SpecificBuilding.GreatHall, 3, 
             null, 1.0f, 1.2f, 1.0f, 1.0f, 
             0.8f, 0.5f, 2.0f, 0.7f, 1.7f, 
        0.5f, 0.4f, 0.1f, 1.4f, 
     0.7f),
            new Building(1, null, null, BuildingType.Culture, SpecificBuilding.SkaldsHall, 3, 
              null, 1.0f, 1.2f, 1.0f, 1.0f, 
              0.8f, 0.5f, 2.0f, 0.7f, 1.7f, 
              0.5f, 0.4f, 0.1f, 1.4f, 
              0.7f),
            new Building(1, null, null, BuildingType.Culture, SpecificBuilding.JarlsManor, 3, 
                          null, 1.0f, 1.2f, 1.0f, 1.0f, 
                          0.8f, 0.5f, 2.0f, 0.7f, 1.7f, 
                          0.5f, 0.4f, 0.1f, 1.4f, 
                          0.7f),
            new Building(1, null, null, BuildingType.Culture, SpecificBuilding.BattlefieldMemorial, 3, 
                                   null, 1.0f, 1.2f, 1.0f, 1.0f, 
                                   0.8f, 0.5f, 2.0f, 0.7f, 1.7f, 
                                   0.5f, 0.4f, 0.1f, 1.4f, 
                                   0.7f),
            new Building(1, null, null, BuildingType.Culture, SpecificBuilding.SagaHall, 3, 
                                            null, 1.0f, 1.2f, 1.0f, 1.0f, 
                                            0.8f, 0.5f, 2.0f, 0.7f, 1.7f, 
                                            0.5f, 0.4f, 0.1f, 1.4f, 
                                            0.7f),
                                                                        
            
        ];
        }

        public static List<Building> EducationBuildings()
        {
            return
            [
                new Building(1, null, null, BuildingType.Education, SpecificBuilding.SagaHall, 3, 
                    null, 1.0f, 1.2f, 1.0f, 1.0f, 
                    0.8f, 0.5f, 2.0f, 0.7f, 1.7f, 
                    0.5f, 0.4f, 0.1f, 1.4f, 
                    0.7f),
                new Building(1, null, null, BuildingType.Education, SpecificBuilding.GreatHall, 3, 
                    null, 1.0f, 1.2f, 1.0f, 1.0f, 
                    0.8f, 0.5f, 2.0f, 0.7f, 1.7f, 
                    0.5f, 0.4f, 0.1f, 1.4f, 
                    0.7f),
                new Building(1, null, null, BuildingType.Education, SpecificBuilding.AxethrowingArena, 3, 
                    null, 1.0f, 1.2f, 1.0f, 1.0f, 
                    0.8f, 0.5f, 2.0f, 0.7f, 1.7f, 
                    0.5f, 0.4f, 0.1f, 1.4f, 
                    0.7f), 
                new Building(1, null, null, BuildingType.Education, SpecificBuilding.WoodworkersWorkshop, 3, 
                    null, 1.0f, 1.2f, 4.0f, 1.0f, 
                    0.8f, 2.5f, 1.0f, 0.7f, 1.7f, 
                    0.5f, 0.4f, 0.1f, 1.4f, 
                    0.7f), 
                new Building(1, null, null, BuildingType.Education, SpecificBuilding.StoneMason, 3, 
                    null, 1.0f, 1.2f, 1.0f, 0.2f, 
                    0.8f, 0.5f, 2.0f, 0.7f, 1.7f, 
                    3.5f, 4.4f, 3.0f, 1.4f, 
                    0.7f) 
            ];
        }
        public static List<Building> RecreationBuildings()
        {
            return
            [
                new Building(1, null, null, BuildingType.Recreation, SpecificBuilding.Alehouse, 3,
                    null, 1.0f, 1.2f, 1.0f, 1.0f,
                    0.8f, 0.5f, 2.0f, 0.7f, 1.7f,
                    0.5f, 0.4f, 0.1f, 1.4f,
                    0.7f),
                new Building(1, null, null, BuildingType.Recreation, SpecificBuilding.HermitsHut, 3,
                    null, 0.4f, 0.4f, 3.0f, 1.0f,
                    2.0f, 1.0f, 1.0f, 2.0f, 3.0f,
                    0.3f, 0.2f, 0.1f, 3.0f,
                    2.4f),
                new Building(1, null, null, BuildingType.Recreation, SpecificBuilding.MeadHall, 3,
                    null, 1.4f, 1.4f, 1.0f, 1.0f,
                    1.0f, 1.0f, 1.0f, 1.0f, 1.0f,
                    1.3f, 1.2f, 1.1f, 1.0f,
                    1.4f),
            ];
        }
        public static List<Building> GetBuildings()
        {
            return
            [
                
                new Building(1, null, null, BuildingType.Production, SpecificBuilding.Wharf, 3, 
                    null, 3.0f, 3.0f, 0.0f, 0.0f, 
                    0.0f, 0.0f, 2.5f, 0.0f, 0.0f, 
                    0.0f, 0.0f, 0.0f, 0.0f, 
                    0.0f),
                new Building(1, null, null, BuildingType.Military, SpecificBuilding.Watchtower, 3, 
                    null, 2.0f, 1.8f, 0.7f, 2.1f, 
                    1.0f, 2.0f, 1.5f, 1.7f, 1.0f, 
                    2.0f, 3.0f, 3.0f, 1.0f, 
                    0.5f),
                 new Building(1, null, null, BuildingType.Production, SpecificBuilding.FishermansHut, 3, 
                    null, 2.0f, 3.0f, 0.0f, 0.0f, 
                    0.0f, 0.0f, 1.6f, 0.0f, 0.0f, 
                    0.0f, 0.0f, 0.0f, 0.0f, 
                    0.0f),
               
                new Building(1, null, null, BuildingType.Health, SpecificBuilding.Longhouse, 3, 
                    null, 2.0f, 2.4f, 1.0f, 2.0f, 
                    2.0f, 2.0f, 1.0f, 1.0f, 1.4f, 
                    1.3f, 1.2f, 1.1f, 1.0f, 
                    1.4f),
                new Building(1, null, null, BuildingType.Production, SpecificBuilding.Shipwright, 3, 
                    null, 2.0f, 2.4f, 0.0f, 0.0f, 
                    0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 
                    0.0f, 0.0f, 0.0f, 0.0f, 
                    0.0f),
                // Add more buildings as needed
            ];
        }
    }
}
        /*
         Tavern,
        Inn,
        Alchemist,
        WizardTower,
        Guildhall,
        Cathedral,
        MageCollege,
        Apothecary,
        Observatory,
        Herbalist,
        Armory,
        Market,
        Stables,
        GuardTower,
        Watchtower,
        HerbalistShop,
        Tailor,
        Bakery,
        Brewery,
        Chandlery,
        Clocktower,
        Colosseum,
        Foundry,
        Lighthouse,
        Masonry,
        Mill,
        OperaHouse,
        Orphanage,
        PrintingPress,
        Scriptorium,
        SculptorStudio,
        SiegeWorkshop,
        SpiceTrader,
        Tannery,
        TeaHouse,
        Treasury,
        University,
        WeavingShop,
        Zoo,
        Oracle,
        ArcaneForge,
        NecromancerTower,
        EnchanterStudio,
        BeastmasterDen,
        DragonKeep,
        MinstrelHall,
        ThievesGuild,
        Watermill,
        Chapel,
        Monastery,
        HerbalGarden,
        ArmorSmith,
        MageGuild,
        GrandLibrary,
        WarlockSanctum,
        Crypt,
        AbandonedTower,
        HunterLodge,
        Courthouse,
        GuildHouse,
        ScribeShop,
        Theatre,
        TaxOffice,
        Cemetery,
        GrimoireLibrary,
        RatCatcher,
        SoapMaker,
        Butcher,
        Weaver,
        Crier,
        Basketweaver,
        TavernAndInn,
        Craftsman,
        Carpenter,
        FishMarket,
        PublicBath,
        Sculpture,
        Bathhouse,
        Clocks,
        BreadShop,
        CityGate,
        River,
        GoldSmith,
        Rancher,
        Cartographer,
        Mason,
        MouldyTower,
        PirateCove,
        Cook,
        Forge,
        Archive,
        Slaughterhouse,
        Bridge,
        Dancehall,
        BlackSmithShop,
        Tunneler,
        MillingShops,
        MedicalDoctor,
        DentistOffice,
        FortuneTeller,
        BowlingAlley,
        ClothesDyer,
        DiplomaticBackchannel,
        FancyDressParty,
        MaskedBall,
        Prison,
        AnimalTraining,
        TotemCarver,
        PalmReader,
        GiftShop,
        AnimalShelter,
        Museum*/